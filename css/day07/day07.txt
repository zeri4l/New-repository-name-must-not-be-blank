
 flex (정렬)
    -> display: flex (부모)
    -> justify-content (수평정렬방식)
    -> align-items (수직정렬방식)
    -> gap (여백)
    -> flex-wrap (요소가 부모를 넘길 때)
       넘긴 요소를 어떻게 처리할지
       (줄바꿈)
    -> flex-grow, flex-shrink, flex-basis (자식)


 grid (표)
    -> column, row
    -> 유연하게 요소를 배치

------------------------------------------------------------------------------

transition(전환)
    전환하는 과정을 사용자에게 보여줄 것인가
    대상, 지속 시간

    ex) 상단 메뉴가 0px에서 300px로 바뀔 때
    높이가 커지는 과정을 사용자에게 보여줄지에 대한 여부
    만약 트랜지션이 없다면, 한번에 크기가 증가4

    투명(opacity)효과를 이용하여 서서히 나타나거나
    사라지게 하는 용도로도 사용 가능
    
    transition: all(height, width) 2s               ease
                ---                ---              ---
                property           duration         timing-function 

    timing-function  
        * ease (점점 느리게)
        * linear (균등하게)
        ease-in (점점 빠르게)
        ease-out (빨랐다가 느리게)
        * ease-in-out (빠르게 느리게 빠르게)
        step-start (시간초가 지나기 전에)
        step-end (시간초가 끝나고 나서)
 
 animation
     애니메이션
     요소의 변화의 반복을 설정할 때

     ex) 
        animation: 애니메이션명 duration(시간 길이) count(횟수) direction(편도 왕복)

        @keyframes 애니메이션명 {
            from 혹은 0%
                시작 상태
                어떤 요소가 애니메이션이 시작할 때부터 변화가 필요한 경우
        }

        n%(30%< 60%, 70%)
            변화할 css속성
            transform: translateX(-16px)


        to 혹은 0%
          마지막 상태
          초기화 값을 넣는 것이 아니라 마지막 상태를 변동하고 싶을 때



----------------------------------------------------------------------

과제 배포할 수 있는 페이지 만들어 오기
